{"ast":null,"code":"import _objectSpread from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/home/codiis/credit-hive/src/components/CustomInput/CheckboxInput.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Field } from \"formik\";\nimport { Checkbox, Box } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CheckboxInput = function CheckboxInput(props) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: props.name,\n        children: function children(_ref) {\n          var field = _ref.field,\n              form = _ref.form;\n          var value = !!(field.value || props.value);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, _objectSpread(_objectSpread({\n              name: props.name\n            }, field), {}, {\n              checked: value,\n              disabled: props.disabled ? props.disabled : false,\n              onChange: function onChange(event) {\n                if (props.valueType === \"boolean\") {\n                  var fieldValue = event.target.checked ? true : false;\n                  form.setFieldValue(props.name, fieldValue);\n                } else {\n                  var _fieldValue = event.target.checked ? 1 : 0;\n\n                  form.setFieldValue(props.name, _fieldValue);\n                }\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: props.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = CheckboxInput;\nCheckboxInput.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  disabled: PropTypes.string,\n  value: PropTypes.string,\n  valueType: PropTypes.string\n};\nexport default CheckboxInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxInput\");","map":{"version":3,"sources":["/home/codiis/credit-hive/src/components/CustomInput/CheckboxInput.js"],"names":["React","Field","Checkbox","Box","PropTypes","CheckboxInput","props","name","field","form","value","disabled","event","valueType","fieldValue","target","checked","setFieldValue","label","propTypes","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,mBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,KAAK,CAACC,IAAnB;AAAA,kBACG,wBAGK;AAAA,cAFJC,KAEI,QAFJA,KAEI;AAAA,cADJC,IACI,QADJA,IACI;AACJ,cAAIC,KAAK,GAAG,CAAC,EAAEF,KAAK,CAACE,KAAN,IAAeJ,KAAK,CAACI,KAAvB,CAAb;AAEA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAA,oCACE,QAAC,QAAD;AACE,cAAA,IAAI,EAAEJ,KAAK,CAACC;AADd,eAEMC,KAFN;AAGE,cAAA,OAAO,EAAEE,KAHX;AAIE,cAAA,QAAQ,EAAEJ,KAAK,CAACK,QAAN,GAAeL,KAAK,CAACK,QAArB,GAA8B,KAJ1C;AAKE,cAAA,QAAQ,EAAE,kBAACC,KAAD,EAAW;AACnB,oBAAIN,KAAK,CAACO,SAAN,KAAoB,SAAxB,EAAmC;AACjC,sBAAIC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAaC,OAAb,GAAuB,IAAvB,GAA8B,KAA/C;AACAP,kBAAAA,IAAI,CAACQ,aAAL,CAAmBX,KAAK,CAACC,IAAzB,EAA+BO,UAA/B;AACD,iBAHD,MAGO;AACL,sBAAIA,WAAU,GAAGF,KAAK,CAACG,MAAN,CAAaC,OAAb,GAAuB,CAAvB,GAA2B,CAA5C;;AACAP,kBAAAA,IAAI,CAACQ,aAAL,CAAmBX,KAAK,CAACC,IAAzB,EAA+BO,WAA/B;AACD;AACF;AAbH;AAAA;AAAA;AAAA;AAAA,qBADF,eAgBE;AAAA,wBAAQR,KAAK,CAACY;AAAd;AAAA;AAAA;AAAA;AAAA,qBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAoBD;AA3BH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAmCD,CApCD;;KAAMb,a;AAsCNA,aAAa,CAACc,SAAd,GAA0B;AACtBZ,EAAAA,IAAI,EAAEH,SAAS,CAACgB,MADM;AAEtBF,EAAAA,KAAK,EAACd,SAAS,CAACgB,MAFM;AAGtBT,EAAAA,QAAQ,EAACP,SAAS,CAACgB,MAHG;AAItBV,EAAAA,KAAK,EAACN,SAAS,CAACgB,MAJM;AAKtBP,EAAAA,SAAS,EAACT,SAAS,CAACgB;AALE,CAA1B;AAQA,eAAef,aAAf","sourcesContent":["import React from \"react\";\nimport { Field } from \"formik\";\nimport { Checkbox, Box } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst CheckboxInput = (props) => {\n  return (\n    <React.Fragment>\n      <Box p={2}>\n        <Field name={props.name}>\n          {({\n            field, \n            form, \n          }) => {\n            let value = !!(field.value || props.value);\n\n            return (\n              <React.Fragment>\n                <Checkbox\n                  name={props.name}\n                  {...field}\n                  checked={value}\n                  disabled={props.disabled?props.disabled:false}\n                  onChange={(event) => {\n                    if (props.valueType === \"boolean\") {\n                      let fieldValue = event.target.checked ? true : false;\n                      form.setFieldValue(props.name, fieldValue);\n                    } else {\n                      let fieldValue = event.target.checked ? 1 : 0;\n                      form.setFieldValue(props.name, fieldValue);\n                    }\n                  }}  \n                /> \n                <label>{props.label}</label>\n              </React.Fragment>\n            );\n          }}\n        </Field>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nCheckboxInput.propTypes = {\n    name: PropTypes.string,\n    label:PropTypes.string,\n    disabled:PropTypes.string,\n    value:PropTypes.string,\n    valueType:PropTypes.string\n  };\n\nexport default CheckboxInput;\n"]},"metadata":{},"sourceType":"module"}