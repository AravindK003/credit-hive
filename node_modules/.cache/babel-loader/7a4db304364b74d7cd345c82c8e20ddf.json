{"ast":null,"code":"import _regeneratorRuntime from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/codiis/credit-hive/src/views/authentication/firebase-forms/FirebaseLogin.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, Button, Checkbox, Divider, FormControl, FormControlLabel, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Typography } from '@material-ui/core';\nimport { Stack } from '@mui/material'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik'; // project imports\n\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // assets\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Google from \"assets/images/icons/social-google.svg\"; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    redButton: _defineProperty({\n      fontSize: '1rem',\n      fontWeight: 500,\n      backgroundColor: theme.palette.grey[50],\n      border: '1px solid',\n      borderColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      textTransform: 'none',\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light\n      }\n    }, theme.breakpoints.down('sm'), {\n      fontSize: '0.875rem'\n    }),\n    signDivider: {\n      flexGrow: 1\n    },\n    signText: {\n      cursor: 'unset',\n      margin: theme.spacing(2),\n      padding: '5px 56px',\n      borderColor: \"\".concat(theme.palette.grey[100], \" !important\"),\n      color: \"\".concat(theme.palette.grey[900], \"!important\"),\n      fontWeight: 500\n    },\n    loginIcon: _defineProperty({\n      marginRight: '16px'\n    }, theme.breakpoints.down('sm'), {\n      marginRight: '8px'\n    }),\n    loginInput: _objectSpread({}, theme.typography.customInput)\n  };\n}); //= ===========================|| FIREBASE - LOGIN ||============================//\n\nvar FirebaseLogin = function FirebaseLogin(props, _ref) {\n  _s();\n\n  var others = Object.assign({}, _ref);\n  var classes = useStyles();\n  var customization = useSelector(function (state) {\n    return state.customization;\n  });\n  var scriptedRef = useScriptRef();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var googleHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.error('Login');\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function googleHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showPassword = _React$useState4[0],\n      setShowPassword = _React$useState4[1];\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    setShowPassword(!showPassword);\n  };\n\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disableElevation: true,\n            fullWidth: true,\n            className: classes.redButton,\n            onClick: googleHandler,\n            size: \"large\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Google,\n              alt: \"google\",\n              width: \"20px\",\n              className: classes.loginIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, _this), \" Sign in with Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.signDivider,\n            orientation: \"horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(AnimateButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: classes.signText,\n              sx: {\n                borderRadius: \"\".concat(customization.borderRadius, \"px\")\n              },\n              disableRipple: true,\n              disabled: true,\n              children: \"OR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.signDivider,\n            orientation: \"horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Sign in with Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: 'info@codedthemes.com',\n        password: '123456',\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().max(255).required('Password is required')\n      }),\n      onSubmit: /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref3) {\n          var setErrors, setStatus, setSubmitting;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  setErrors = _ref3.setErrors, setStatus = _ref3.setStatus, setSubmitting = _ref3.setSubmitting;\n                  console.log('values', values);\n\n                  try {\n                    if (scriptedRef.current) {\n                      setStatus({\n                        success: true\n                      });\n                      setSubmitting(false);\n                    }\n                  } catch (err) {\n                    console.error(err);\n\n                    if (scriptedRef.current) {\n                      setStatus({\n                        success: false\n                      });\n                      setErrors({\n                        submit: err.message\n                      });\n                      setSubmitting(false);\n                    }\n                  }\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x, _x2) {\n          return _ref4.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref5) {\n        var errors = _ref5.errors,\n            handleBlur = _ref5.handleBlur,\n            handleChange = _ref5.handleChange,\n            handleSubmit = _ref5.handleSubmit,\n            isSubmitting = _ref5.isSubmitting,\n            touched = _ref5.touched,\n            values = _ref5.values;\n        return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n          noValidate: true,\n          onSubmit: handleSubmit\n        }, others), {}, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            error: Boolean(touched.email && errors.email),\n            className: classes.loginInput,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-email-login\",\n              children: \"Email Address / Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-email-login\",\n              type: \"email\",\n              value: values.email,\n              name: \"email\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              label: \"Email Address / Username\",\n              inputProps: {\n                classes: {\n                  notchedOutline: classes.notchedOutline\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, _this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              id: \"standard-weight-helper-text-email-login\",\n              children: [' ', errors.email, ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            error: Boolean(touched.password && errors.password),\n            className: classes.loginInput,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-password-login\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-password-login\",\n              type: showPassword ? 'text' : 'password',\n              value: values.password,\n              name: \"password\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: handleClickShowPassword,\n                  onMouseDown: handleMouseDownPassword,\n                  edge: \"end\",\n                  children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 61\n                  }, _this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 78\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, _this),\n              label: \"Password\",\n              inputProps: {\n                classes: {\n                  notchedOutline: classes.notchedOutline\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, _this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              id: \"standard-weight-helper-text-password-login\",\n              children: [' ', errors.password, ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: checked,\n                onChange: function onChange(event) {\n                  return setChecked(event.target.checked);\n                },\n                name: \"checked\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, _this),\n              label: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              component: Link,\n              to: \"/pages/forgot-password/forgot-password3\",\n              color: \"secondary\",\n              sx: {\n                textDecoration: 'none'\n              },\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, _this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: errors.submit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disableElevation: true,\n                disabled: isSubmitting,\n                fullWidth: true,\n                size: \"large\",\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, _this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(FirebaseLogin, \"jUlTUIG7gDCabqpY2dYpff5lcVk=\", false, function () {\n  return [useStyles, useSelector, useScriptRef];\n});\n\n_c = FirebaseLogin;\nexport default FirebaseLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseLogin\");","map":{"version":3,"sources":["/home/codiis/credit-hive/src/views/authentication/firebase-forms/FirebaseLogin.js"],"names":["React","useSelector","Link","makeStyles","Box","Button","Checkbox","Divider","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","Typography","Stack","Yup","Formik","useScriptRef","AnimateButton","Visibility","VisibilityOff","useStyles","theme","redButton","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","loginIcon","marginRight","loginInput","typography","customInput","FirebaseLogin","props","others","classes","customization","state","scriptedRef","useState","checked","setChecked","googleHandler","console","error","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Google","alignItems","display","borderRadius","mb","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","log","current","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","notchedOutline","target","textDecoration","mt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Typography\n} from '@material-ui/core';\nimport { Stack } from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Google from 'assets/images/icons/social-google.svg';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: `${theme.palette.grey[100]} !important`,\n        color: `${theme.palette.grey[900]}!important`,\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//= ===========================|| FIREBASE - LOGIN ||============================//\n\nconst FirebaseLogin = (props, { ...others }) => {\n    const classes = useStyles();\n\n    const customization = useSelector((state) => state.customization);\n    const scriptedRef = useScriptRef();\n    const [checked, setChecked] = React.useState(true);\n\n    const googleHandler = async () => {\n        console.error('Login');\n    };\n\n    const [showPassword, setShowPassword] = React.useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth\n                            className={classes.redButton}\n                            onClick={googleHandler}\n                            size=\"large\"\n                            variant=\"contained\"\n                        >\n                            <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign in with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                        }}\n                    >\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <AnimateButton>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.signText}\n                                sx={{ borderRadius: `${customization.borderRadius}px` }}\n                                disableRipple\n                                disabled\n                            >\n                                OR\n                            </Button>\n                        </AnimateButton>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box\n                        sx={{\n                            mb: 2\n                        }}\n                    >\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    console.log('values', values);\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address / Username\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(event) => setChecked(event.target.checked)}\n                                        name=\"checked\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Typography\n                                variant=\"subtitle1\"\n                                component={Link}\n                                to=\"/pages/forgot-password/forgot-password3\"\n                                color=\"secondary\"\n                                sx={{ textDecoration: 'none' }}\n                            >\n                                Forgot Password?\n                            </Typography>\n                        </Stack>\n                        {errors.submit && (\n                            <Box\n                                sx={{\n                                    mt: 3\n                                }}\n                            >\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box\n                            sx={{\n                                mt: 2\n                            }}\n                        >\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign in\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default FirebaseLogin;\n"]},"metadata":{},"sourceType":"module"}