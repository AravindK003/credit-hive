{"ast":null,"code":"import _regeneratorRuntime from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/home/codiis/credit-hive/src/views/Admin/Signin.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useHistory } from 'react-router-dom';\n// import { useFormik, Form, FormikProvider } from 'formik';\n// import * as Yup from 'yup';\n// import { Stack } from '@mui/material';\n// import { IconButton, InputAdornment } from '@material-ui/core';\n// import { Icon } from '@iconify/react';\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://codiis.com\">\n//         Connected Digital Systems Pvt Ltd.\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n// const theme = createTheme();\n// export default function SignIn() {\n//   const history = useHistory();\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [fail, setFail] = useState();\n//   const LoginSchema = Yup.object().shape({\n//     emailIdOrMobileNo: Yup.string().required('Email or Phone is required'),\n//     password: Yup.string().required('Password is required')\n//   });\n//   const formik = useFormik({\n//     initialValues: {\n//       emailIdOrMobileNo: '',\n//       password: '',\n//     },\n//     validationSchema: LoginSchema,\n//     onSubmit: () => {\n//        postData();\n//     }\n//   });\n//   const postData =async()=>{\n//     console.log(formik.values)\n//     let data;\n//     await axios.post(`${process.env.REACT_APP_API_END_POINT}/dicom/login`,formik.values)\n//         .then((res)=>data=res.data);\n//     console.log(data);\n//     if(data.response){\n//     window.localStorage.setItem(\"token\",data.response.jwtToken);\n//     window.localStorage.setItem(\"fname\",data.response.fName)\n//     window.localStorage.setItem(\"lname\",data.response.lName)\n//     window.localStorage.setItem(\"emailId\",data.response.emailId)\n//     }\n//     if(data.status === 200 ){\n//       navigate('/dashboard1', { replace: true });\n//     }else{\n//       setFail(data.err_msg);\n//     }\n//   }\n//   const { errors, touched, values, isSubmitting,handleSubmit, getFieldProps } = formik;\n//   const handleShowPassword = () => {\n//     setShowPassword((show) => !show);\n//   };\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Container component=\"main\" maxWidth=\"md\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 10,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign in\n//           </Typography>\n//           <FormikProvider value={formik}>\n//          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n//         <Stack spacing={3}>\n//           <TextField\n//             fullWidth\n//             autoComplete=\"username\"\n//             type=\"email\"\n//             label=\"Email or Phone\"\n//             {...getFieldProps('emailIdOrMobileNo')}\n//             error={Boolean(touched.emailIdOrMobileNo && errors.emailIdOrMobileNo)}\n//             helperText={touched.emailIdOrMobileNo && errors.emailIdOrMobileNo}\n//           />\n//           <TextField\n//             fullWidth\n//             autoComplete=\"current-password\"\n//             type={showPassword ? 'text' : 'password'}\n//             label=\"Password\"\n//             {...getFieldProps('password')}\n//             InputProps={{\n//               endAdornment: (\n//                 <InputAdornment position=\"end\">\n//                   <IconButton onClick={handleShowPassword} edge=\"end\">\n//                     <Icon icon={showPassword ? '' : ''} />\n//                   </IconButton>\n//                 </InputAdornment>\n//               )\n//             }}\n//             error={Boolean(touched.password && errors.password)}\n//             helperText={touched.password && errors.password}\n//           />\n//         </Stack>\n//             <br />\n//            {fail && <Alert icon={false} severity=\"error\">\n//               <Typography variant=\"caption\"> {fail}</Typography>\n//             </Alert>}\n//       <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n//           <FormControlLabel\n//             control={<Checkbox checked={values.remember} />}\n//             label=\"Remember me\"\n//           />\n//           <Link variant=\"subtitle2\" href=\"/forgot-password\">\n//             Forgot password?\n//           </Link>\n//           </Stack>\n//         <Button fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\n//         <Stack alignItems=\"center\" justifyContent=\"space-between\">\n//           <Link href=\"/signup\" variant=\"body2\">\n//                   {\"Don't have an account? Sign Up\"}\n//           </Link>\n//         </Stack>\n//       </Form>\n//     </FormikProvider>\n//         </Box>\n//         <Copyright sx={{ mt: 8, mb: 4 }} />\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\nimport React, { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport * as Yup from 'yup';\nimport { Stack } from '@mui/material';\nimport { IconButton, InputAdornment } from '@material-ui/core';\nimport { Icon } from '@iconify/react';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright(props) {\n  return /*#__PURE__*/_jsxDEV(Typography, _objectSpread(_objectSpread({\n    variant: \"body2\",\n    color: \"text.secondary\",\n    align: \"center\"\n  }, props), {}, {\n    children: ['Copyright © ', /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://material-ui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), ' ', new Date().getFullYear(), '.']\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Copyright;\nvar theme = createTheme();\nexport default function SignIn() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPassword = _useState2[0],\n      setShowPassword = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fail = _useState4[0],\n      setFail = _useState4[1];\n\n  var LoginSchema = Yup.object().shape({\n    emailIdOrMobileNo: Yup.string().required('Email or Phone is required'),\n    password: Yup.string().required('Password is required')\n  });\n  var formik = useFormik({\n    initialValues: {\n      emailIdOrMobileNo: '',\n      password: ''\n    },\n    validationSchema: LoginSchema,\n    onSubmit: function onSubmit() {\n      postData();\n    }\n  });\n\n  var postData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(formik.values);\n              _context.next = 3;\n              return axios.post(\"\".concat(process.env.REACT_APP_API_END_POINT, \"/dicom/login\"), formik.values).then(function (res) {\n                return data = res.data;\n              });\n\n            case 3:\n              console.log(data);\n\n              if (data.response) {\n                window.localStorage.setItem(\"token\", data.response.jwtToken);\n                window.localStorage.setItem(\"fname\", data.response.fName);\n                window.localStorage.setItem(\"lname\", data.response.lName);\n                window.localStorage.setItem(\"emailId\", data.response.emailId);\n              }\n\n              if (data.status === 200) {\n                navigate('/dashboard1', {\n                  replace: true\n                });\n              } else {\n                setFail(data.err_msg);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function postData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var errors = formik.errors,\n      touched = formik.touched,\n      values = formik.values,\n      isSubmitting = formik.isSubmitting,\n      handleSubmit = formik.handleSubmit,\n      getFieldProps = formik.getFieldProps;\n\n  var handleShowPassword = function handleShowPassword() {\n    setShowPassword(function (show) {\n      return !show;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'secondary.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n            value: formik,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              autoComplete: \"off\",\n              noValidate: true,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                label: \"Email Address\",\n                name: \"emailIdOrMobileNo\",\n                autoComplete: \"email\",\n                autoFocus: true\n              }, getFieldProps('emailIdOrMobileNo')), {}, {\n                error: Boolean(touched.emailIdOrMobileNo && errors.emailIdOrMobileNo),\n                helperText: touched.emailIdOrMobileNo && errors.emailIdOrMobileNo\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                autoComplete: \"current-password\"\n              }, getFieldProps('password')), {}, {\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: handleShowPassword,\n                      edge: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        icon: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 290,\n                          columnNumber: 52\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 290,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this)\n                },\n                error: Boolean(touched.password && errors.password),\n                helperText: touched.password && errors.password\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  value: \"remember\",\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 24\n                }, this),\n                label: \"Remember me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                fullWidth: true,\n                variant: \"contained\",\n                sx: {\n                  mt: 3,\n                  mb: 2\n                },\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: true,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    href: \"#\",\n                    variant: \"body2\",\n                    children: \"Forgot password?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    href: \"#\",\n                    variant: \"body2\",\n                    children: \"Don't have an account? Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Copyright, {\n        sx: {\n          mt: 8,\n          mb: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"sB4IAqeDOMcy3E/pfry3Qtct258=\", false, function () {\n  return [useFormik];\n});\n\n_c2 = SignIn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"SignIn\");","map":{"version":3,"sources":["/home/codiis/credit-hive/src/views/Admin/Signin.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","useFormik","Form","FormikProvider","Yup","Stack","IconButton","InputAdornment","Icon","VisibilityIcon","VisibilityOffIcon","Copyright","props","Date","getFullYear","theme","SignIn","showPassword","setShowPassword","fail","setFail","LoginSchema","object","shape","emailIdOrMobileNo","string","required","password","formik","initialValues","validationSchema","onSubmit","postData","console","log","values","axios","post","process","env","REACT_APP_API_END_POINT","then","res","data","response","window","localStorage","setItem","jwtToken","fName","lName","emailId","status","navigate","replace","err_msg","errors","touched","isSubmitting","handleSubmit","getFieldProps","handleShowPassword","show","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","Boolean","endAdornment","mb"],"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","sourcesContent":["// import React, {useState} from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useHistory } from 'react-router-dom';\n// import { useFormik, Form, FormikProvider } from 'formik';\n// import * as Yup from 'yup';\n// import { Stack } from '@mui/material';\n// import { IconButton, InputAdornment } from '@material-ui/core';\n// import { Icon } from '@iconify/react';\n\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://codiis.com\">\n//         Connected Digital Systems Pvt Ltd.\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\n// const theme = createTheme();\n\n// export default function SignIn() {\n//   const history = useHistory();\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [fail, setFail] = useState();\n\n//   const LoginSchema = Yup.object().shape({\n//     emailIdOrMobileNo: Yup.string().required('Email or Phone is required'),\n//     password: Yup.string().required('Password is required')\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       emailIdOrMobileNo: '',\n//       password: '',\n//     },\n//     validationSchema: LoginSchema,\n//     onSubmit: () => {\n//        postData();\n//     }\n//   });\n\n//   const postData =async()=>{\n//     console.log(formik.values)\n//     let data;\n//     await axios.post(`${process.env.REACT_APP_API_END_POINT}/dicom/login`,formik.values)\n//         .then((res)=>data=res.data);\n//     console.log(data);\n//     if(data.response){\n//     window.localStorage.setItem(\"token\",data.response.jwtToken);\n//     window.localStorage.setItem(\"fname\",data.response.fName)\n//     window.localStorage.setItem(\"lname\",data.response.lName)\n//     window.localStorage.setItem(\"emailId\",data.response.emailId)\n//     }\n//     if(data.status === 200 ){\n//       navigate('/dashboard1', { replace: true });\n//     }else{\n//       setFail(data.err_msg);\n//     }\n//   }\n\n//   const { errors, touched, values, isSubmitting,handleSubmit, getFieldProps } = formik;\n//   const handleShowPassword = () => {\n//     setShowPassword((show) => !show);\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Container component=\"main\" maxWidth=\"md\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 10,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign in\n//           </Typography>\n//           <FormikProvider value={formik}>\n//          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n//         <Stack spacing={3}>\n//           <TextField\n//             fullWidth\n//             autoComplete=\"username\"\n//             type=\"email\"\n//             label=\"Email or Phone\"\n//             {...getFieldProps('emailIdOrMobileNo')}\n//             error={Boolean(touched.emailIdOrMobileNo && errors.emailIdOrMobileNo)}\n//             helperText={touched.emailIdOrMobileNo && errors.emailIdOrMobileNo}\n//           />\n\n//           <TextField\n//             fullWidth\n//             autoComplete=\"current-password\"\n//             type={showPassword ? 'text' : 'password'}\n//             label=\"Password\"\n//             {...getFieldProps('password')}\n//             InputProps={{\n//               endAdornment: (\n//                 <InputAdornment position=\"end\">\n//                   <IconButton onClick={handleShowPassword} edge=\"end\">\n//                     <Icon icon={showPassword ? '' : ''} />\n//                   </IconButton>\n//                 </InputAdornment>\n//               )\n//             }}\n//             error={Boolean(touched.password && errors.password)}\n//             helperText={touched.password && errors.password}\n//           />\n//         </Stack>\n//             <br />\n//            {fail && <Alert icon={false} severity=\"error\">\n//               <Typography variant=\"caption\"> {fail}</Typography>\n//             </Alert>}\n//       <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n//           <FormControlLabel\n//             control={<Checkbox checked={values.remember} />}\n//             label=\"Remember me\"\n//           />\n//           <Link variant=\"subtitle2\" href=\"/forgot-password\">\n//             Forgot password?\n//           </Link>\n         \n//           </Stack>\n//         <Button fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\n       \n//         <Stack alignItems=\"center\" justifyContent=\"space-between\">\n//           <Link href=\"/signup\" variant=\"body2\">\n//                   {\"Don't have an account? Sign Up\"}\n//           </Link>\n//         </Stack>\n//       </Form>\n//     </FormikProvider>\n//         </Box>\n//         <Copyright sx={{ mt: 8, mb: 4 }} />\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\n\nimport React, {useState} from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport * as Yup from 'yup';\nimport { Stack } from '@mui/material';\nimport { IconButton, InputAdornment } from '@material-ui/core';\nimport { Icon } from '@iconify/react';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n\n    const [showPassword, setShowPassword] = useState(false);\n      const [fail, setFail] = useState();\n    \n      const LoginSchema = Yup.object().shape({\n        emailIdOrMobileNo: Yup.string().required('Email or Phone is required'),\n        password: Yup.string().required('Password is required')\n      });\n    \n      const formik = useFormik({\n        initialValues: {\n          emailIdOrMobileNo: '',\n          password: '',\n        },\n        validationSchema: LoginSchema,\n        onSubmit: () => {\n           postData();\n        }\n      });\n    \n      const postData =async()=>{\n        console.log(formik.values)\n        let data;\n        await axios.post(`${process.env.REACT_APP_API_END_POINT}/dicom/login`,formik.values)\n            .then((res)=>data=res.data);\n        console.log(data);\n        if(data.response){\n        window.localStorage.setItem(\"token\",data.response.jwtToken);\n        window.localStorage.setItem(\"fname\",data.response.fName)\n        window.localStorage.setItem(\"lname\",data.response.lName)\n        window.localStorage.setItem(\"emailId\",data.response.emailId)\n        }\n        if(data.status === 200 ){\n          navigate('/dashboard1', { replace: true });\n        }else{\n          setFail(data.err_msg);\n        }\n      }\n    \n      const { errors, touched, values, isSubmitting,handleSubmit, getFieldProps } = formik;\n      const handleShowPassword = () => {\n        setShowPassword((show) => !show);\n      };\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box sx={{ mt: 1 }}>\n          <FormikProvider value={formik}>\n          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Email Address\"\n              name=\"emailIdOrMobileNo\"\n              autoComplete=\"email\"\n              autoFocus\n              {...getFieldProps('emailIdOrMobileNo')}\n              error={Boolean(touched.emailIdOrMobileNo && errors.emailIdOrMobileNo)}\n              helperText={touched.emailIdOrMobileNo && errors.emailIdOrMobileNo}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              {...getFieldProps('password')}\n              InputProps={{\n                    endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <IconButton onClick={handleShowPassword} edge=\"end\">\n                        <Icon icon={showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />} />\n                        </IconButton>\n                    </InputAdornment>\n                    )\n                }}\n                error={Boolean(touched.password && errors.password)}\n                helperText={touched.password && errors.password}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            </Form>\n            </FormikProvider>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}