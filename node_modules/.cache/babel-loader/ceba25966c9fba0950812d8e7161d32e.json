{"ast":null,"code":"import _objectSpread from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/codiis/credit-hive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/codiis/credit-hive/src/components/login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill'; // material\n\nimport { Link, Stack, Checkbox, TextField, IconButton, InputAdornment, FormControlLabel, Alert, Button, Typography } from '@mui/material';\nimport axios from 'axios'; // prettier-ignore\n// ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPassword = _useState2[0],\n      setShowPassword = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      token = _useState4[0],\n      setToken = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fail = _useState6[0],\n      setFail = _useState6[1];\n\n  var LoginSchema = Yup.object().shape({\n    emailIdOrMobileNo: Yup.string().required('Email or Phone is required'),\n    password: Yup.string().required('Password is required')\n  });\n  var formik = useFormik({\n    initialValues: {\n      emailIdOrMobileNo: '',\n      password: ''\n    },\n    validationSchema: LoginSchema,\n    onSubmit: function onSubmit() {\n      postData();\n    }\n  });\n\n  var postData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(formik.values);\n              _context.next = 3;\n              return axios.post(\"\".concat(process.env.REACT_APP_API_END_POINT, \"/dicom/login\"), formik.values).then(function (res) {\n                return data = res.data;\n              });\n\n            case 3:\n              console.log(data);\n\n              if (data.response) {\n                window.localStorage.setItem(\"token\", data.response.jwtToken);\n                window.localStorage.setItem(\"fname\", data.response.fName);\n                window.localStorage.setItem(\"lname\", data.response.lName);\n                window.localStorage.setItem(\"emailId\", data.response.emailId);\n              }\n\n              if (data.status === 200) {\n                navigate('/dashboard1', {\n                  replace: true\n                });\n              } else {\n                setFail(data.err_msg);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function postData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var errors = formik.errors,\n      touched = formik.touched,\n      values = formik.values,\n      isSubmitting = formik.isSubmitting,\n      handleSubmit = formik.handleSubmit,\n      getFieldProps = formik.getFieldProps;\n\n  var handleShowPassword = function handleShowPassword() {\n    setShowPassword(function (show) {\n      return !show;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          autoComplete: \"username\",\n          type: \"email\",\n          label: \"Email or Phone\"\n        }, getFieldProps('emailIdOrMobileNo')), {}, {\n          error: Boolean(touched.emailIdOrMobileNo && errors.emailIdOrMobileNo),\n          helperText: touched.emailIdOrMobileNo && errors.emailIdOrMobileNo\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? 'text' : 'password',\n          label: \"Password\"\n        }, getFieldProps('password')), {}, {\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleShowPassword,\n                edge: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), fail && /*#__PURE__*/_jsxDEV(Alert, {\n        icon: false,\n        severity: \"error\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: [\" \", fail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        sx: {\n          my: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: values.remember\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 22\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          variant: \"subtitle2\",\n          to: \"/forgot-password\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"DudHeLtCvHUVxj3YLMMqmnM09RU=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/codiis/credit-hive/src/components/login/LoginForm.js"],"names":["Yup","useEffect","useState","Link","RouterLink","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","Alert","Button","Typography","axios","LoginForm","showPassword","setShowPassword","token","setToken","fail","setFail","LoginSchema","object","shape","emailIdOrMobileNo","string","required","password","formik","initialValues","validationSchema","onSubmit","postData","console","log","values","post","process","env","REACT_APP_API_END_POINT","then","res","data","response","window","localStorage","setItem","jwtToken","fName","lName","emailId","status","navigate","replace","err_msg","errors","touched","isSubmitting","handleSubmit","getFieldProps","handleShowPassword","show","Boolean","endAdornment","my","remember"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport {\n  Link,\n  Stack,\n  Checkbox,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormControlLabel,\n  Alert,\n  Button,\n  Typography\n} from '@mui/material';\nimport axios from 'axios';\n\n// prettier-ignore\n// ----------------------------------------------------------------------\n\nexport default function LoginForm() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [token, setToken] = useState();\n  const [fail, setFail] = useState();\n\n  const LoginSchema = Yup.object().shape({\n    emailIdOrMobileNo: Yup.string().required('Email or Phone is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      emailIdOrMobileNo: '',\n      password: '',\n    },\n    validationSchema: LoginSchema,\n    onSubmit: () => {\n       postData();\n    }\n  });\n\n  const postData =async()=>{\n    console.log(formik.values)\n    let data;\n    await axios.post(`${process.env.REACT_APP_API_END_POINT}/dicom/login`,formik.values)\n        .then((res)=>data=res.data);\n    console.log(data);\n    if(data.response){\n    window.localStorage.setItem(\"token\",data.response.jwtToken);\n    window.localStorage.setItem(\"fname\",data.response.fName)\n    window.localStorage.setItem(\"lname\",data.response.lName)\n    window.localStorage.setItem(\"emailId\",data.response.emailId)\n    }\n    if(data.status === 200 ){\n      navigate('/dashboard1', { replace: true });\n    }else{\n      setFail(data.err_msg);\n    }\n  }\n\n  const { errors, touched, values, isSubmitting,handleSubmit, getFieldProps } = formik;\n  const handleShowPassword = () => {\n    setShowPassword((show) => !show);\n  };\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email or Phone\"\n            {...getFieldProps('emailIdOrMobileNo')}\n            error={Boolean(touched.emailIdOrMobileNo && errors.emailIdOrMobileNo)}\n            helperText={touched.emailIdOrMobileNo && errors.emailIdOrMobileNo}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n        </Stack>\n            <br />\n           {fail && <Alert icon={false} severity=\"error\">\n              <Typography variant=\"caption\"> {fail}</Typography>\n            </Alert>}\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n          <FormControlLabel\n            control={<Checkbox checked={values.remember} />}\n            label=\"Remember me\"\n          />\n\n          <Link component={RouterLink} variant=\"subtitle2\" to=\"/forgot-password\">\n            Forgot password?\n          </Link>\n        </Stack>\n\n        <Button\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          Login\n        </Button>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}