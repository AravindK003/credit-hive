{"ast":null,"code":"// import React, {useState} from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useHistory } from 'react-router-dom';\n// import { useFormik, Form, FormikProvider } from 'formik';\n// import * as Yup from 'yup';\n// import { Stack } from '@mui/material';\n// import { IconButton, InputAdornment } from '@material-ui/core';\n// import { Icon } from '@iconify/react';\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://codiis.com\">\n//         Connected Digital Systems Pvt Ltd.\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n// const theme = createTheme();\n// export default function SignIn() {\n//   const history = useHistory();\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [fail, setFail] = useState();\n//   const LoginSchema = Yup.object().shape({\n//     emailIdOrMobileNo: Yup.string().required('Email or Phone is required'),\n//     password: Yup.string().required('Password is required')\n//   });\n//   const formik = useFormik({\n//     initialValues: {\n//       emailIdOrMobileNo: '',\n//       password: '',\n//     },\n//     validationSchema: LoginSchema,\n//     onSubmit: () => {\n//        postData();\n//     }\n//   });\n//   const postData =async()=>{\n//     console.log(formik.values)\n//     let data;\n//     await axios.post(`${process.env.REACT_APP_API_END_POINT}/dicom/login`,formik.values)\n//         .then((res)=>data=res.data);\n//     console.log(data);\n//     if(data.response){\n//     window.localStorage.setItem(\"token\",data.response.jwtToken);\n//     window.localStorage.setItem(\"fname\",data.response.fName)\n//     window.localStorage.setItem(\"lname\",data.response.lName)\n//     window.localStorage.setItem(\"emailId\",data.response.emailId)\n//     }\n//     if(data.status === 200 ){\n//       navigate('/dashboard1', { replace: true });\n//     }else{\n//       setFail(data.err_msg);\n//     }\n//   }\n//   const { errors, touched, values, isSubmitting,handleSubmit, getFieldProps } = formik;\n//   const handleShowPassword = () => {\n//     setShowPassword((show) => !show);\n//   };\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Container component=\"main\" maxWidth=\"md\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 10,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign in\n//           </Typography>\n//           <FormikProvider value={formik}>\n//          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n//         <Stack spacing={3}>\n//           <TextField\n//             fullWidth\n//             autoComplete=\"username\"\n//             type=\"email\"\n//             label=\"Email or Phone\"\n//             {...getFieldProps('emailIdOrMobileNo')}\n//             error={Boolean(touched.emailIdOrMobileNo && errors.emailIdOrMobileNo)}\n//             helperText={touched.emailIdOrMobileNo && errors.emailIdOrMobileNo}\n//           />\n//           <TextField\n//             fullWidth\n//             autoComplete=\"current-password\"\n//             type={showPassword ? 'text' : 'password'}\n//             label=\"Password\"\n//             {...getFieldProps('password')}\n//             InputProps={{\n//               endAdornment: (\n//                 <InputAdornment position=\"end\">\n//                   <IconButton onClick={handleShowPassword} edge=\"end\">\n//                     <Icon icon={showPassword ? '' : ''} />\n//                   </IconButton>\n//                 </InputAdornment>\n//               )\n//             }}\n//             error={Boolean(touched.password && errors.password)}\n//             helperText={touched.password && errors.password}\n//           />\n//         </Stack>\n//             <br />\n//            {fail && <Alert icon={false} severity=\"error\">\n//               <Typography variant=\"caption\"> {fail}</Typography>\n//             </Alert>}\n//       <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n//           <FormControlLabel\n//             control={<Checkbox checked={values.remember} />}\n//             label=\"Remember me\"\n//           />\n//           <Link variant=\"subtitle2\" href=\"/forgot-password\">\n//             Forgot password?\n//           </Link>\n//           </Stack>\n//         <Button fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\n//         <Stack alignItems=\"center\" justifyContent=\"space-between\">\n//           <Link href=\"/signup\" variant=\"body2\">\n//                   {\"Don't have an account? Sign Up\"}\n//           </Link>\n//         </Stack>\n//       </Form>\n//     </FormikProvider>\n//         </Box>\n//         <Copyright sx={{ mt: 8, mb: 4 }} />\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }","map":{"version":3,"sources":["/home/codiis/credit-hive/src/views/Admin/Signin.js"],"names":[],"mappingssourcesContent":["// import React, {useState} from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useHistory } from 'react-router-dom';\n// import { useFormik, Form, FormikProvider } from 'formik';\n// import * as Yup from 'yup';\n// import { Stack } from '@mui/material';\n// import { IconButton, InputAdornment } from '@material-ui/core';\n// import { Icon } from '@iconify/react';\n\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://codiis.com\">\n//         Connected Digital Systems Pvt Ltd.\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\n// const theme = createTheme();\n\n// export default function SignIn() {\n//   const history = useHistory();\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [fail, setFail] = useState();\n\n//   const LoginSchema = Yup.object().shape({\n//     emailIdOrMobileNo: Yup.string().required('Email or Phone is required'),\n//     password: Yup.string().required('Password is required')\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       emailIdOrMobileNo: '',\n//       password: '',\n//     },\n//     validationSchema: LoginSchema,\n//     onSubmit: () => {\n//        postData();\n//     }\n//   });\n\n//   const postData =async()=>{\n//     console.log(formik.values)\n//     let data;\n//     await axios.post(`${process.env.REACT_APP_API_END_POINT}/dicom/login`,formik.values)\n//         .then((res)=>data=res.data);\n//     console.log(data);\n//     if(data.response){\n//     window.localStorage.setItem(\"token\",data.response.jwtToken);\n//     window.localStorage.setItem(\"fname\",data.response.fName)\n//     window.localStorage.setItem(\"lname\",data.response.lName)\n//     window.localStorage.setItem(\"emailId\",data.response.emailId)\n//     }\n//     if(data.status === 200 ){\n//       navigate('/dashboard1', { replace: true });\n//     }else{\n//       setFail(data.err_msg);\n//     }\n//   }\n\n//   const { errors, touched, values, isSubmitting,handleSubmit, getFieldProps } = formik;\n//   const handleShowPassword = () => {\n//     setShowPassword((show) => !show);\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Container component=\"main\" maxWidth=\"md\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 10,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign in\n//           </Typography>\n//           <FormikProvider value={formik}>\n//          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n//         <Stack spacing={3}>\n//           <TextField\n//             fullWidth\n//             autoComplete=\"username\"\n//             type=\"email\"\n//             label=\"Email or Phone\"\n//             {...getFieldProps('emailIdOrMobileNo')}\n//             error={Boolean(touched.emailIdOrMobileNo && errors.emailIdOrMobileNo)}\n//             helperText={touched.emailIdOrMobileNo && errors.emailIdOrMobileNo}\n//           />\n\n//           <TextField\n//             fullWidth\n//             autoComplete=\"current-password\"\n//             type={showPassword ? 'text' : 'password'}\n//             label=\"Password\"\n//             {...getFieldProps('password')}\n//             InputProps={{\n//               endAdornment: (\n//                 <InputAdornment position=\"end\">\n//                   <IconButton onClick={handleShowPassword} edge=\"end\">\n//                     <Icon icon={showPassword ? '' : ''} />\n//                   </IconButton>\n//                 </InputAdornment>\n//               )\n//             }}\n//             error={Boolean(touched.password && errors.password)}\n//             helperText={touched.password && errors.password}\n//           />\n//         </Stack>\n//             <br />\n//            {fail && <Alert icon={false} severity=\"error\">\n//               <Typography variant=\"caption\"> {fail}</Typography>\n//             </Alert>}\n//       <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n//           <FormControlLabel\n//             control={<Checkbox checked={values.remember} />}\n//             label=\"Remember me\"\n//           />\n//           <Link variant=\"subtitle2\" href=\"/forgot-password\">\n//             Forgot password?\n//           </Link>\n         \n//           </Stack>\n//         <Button fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\n       \n//         <Stack alignItems=\"center\" justifyContent=\"space-between\">\n//           <Link href=\"/signup\" variant=\"body2\">\n//                   {\"Don't have an account? Sign Up\"}\n//           </Link>\n//         </Stack>\n//       </Form>\n//     </FormikProvider>\n//         </Box>\n//         <Copyright sx={{ mt: 8, mb: 4 }} />\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\n\n"]},"metadata":{},"sourceType":"module"}