{"ast":null,"code":"var _jsxFileName = \"/home/codiis/credit-hive/src/components/CustomInput/SelectInput.js\",\n    _this = this;\n\nimport React from 'react';\nimport { Select, Box, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport { Field } from 'formik';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SelectInput = function SelectInput(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      options = _ref.options,\n      optionValue = _ref.optionValue,\n      optionText = _ref.optionText,\n      disabled = _ref.disabled,\n      handleChange = _ref.handleChange;\n  // const labelRef= useRef()\n  // const labelWidth = labelRef.current ? labelRef.current.clientWidth : 0\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    children: /*#__PURE__*/_jsxDEV(Field, {\n      name: name,\n      children: function children(_ref2) {\n        var field = _ref2.field,\n            form = _ref2.form,\n            meta = _ref2.meta;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            fullWidth: true,\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              shrink: field.value ? true : false,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 26\n            }, _this), handleChange ? /*#__PURE__*/_jsxDEV(Select, {\n              name: field.name,\n              label: label,\n              disabled: disabled ? disabled : false,\n              value: field.value || '',\n              onChange: function onChange(e) {\n                return handleChange(e, form.setFieldValue);\n              },\n              variant: \"outlined\",\n              style: form.dirty && meta.touched ? {\n                backgroundColor: '#FDFBC5'\n              } : undefined,\n              type: \"text\",\n              error: meta.error && meta.touched ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, _this), options.map(function (option) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option[optionValue],\n                  children: option[optionText]\n                }, option[optionValue], false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 57\n                }, _this);\n              })]\n            }, label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, _this) : /*#__PURE__*/_jsxDEV(Select, {\n              name: field.name,\n              label: label,\n              disabled: disabled ? disabled : false,\n              value: field.value || '',\n              onChange: field.onChange,\n              variant: \"outlined\",\n              style: form.dirty && meta.touched ? {\n                backgroundColor: '#FDFBC5'\n              } : undefined,\n              type: \"text\",\n              error: meta.error && meta.touched ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, _this), options.map(function (option) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option[optionValue],\n                  children: option[optionText]\n                }, option[optionValue], false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 57\n                }, _this);\n              })]\n            }, label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 26\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 26\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = SelectInput;\nSelectInput.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.string,\n  optionText: PropTypes.string,\n  value: PropTypes.string,\n  optionValue: PropTypes.string,\n  disabled: PropTypes.string,\n  handleChange: PropTypes[\"function\"],\n  labelWidth: PropTypes.string\n};\nexport default SelectInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectInput\");","map":{"version":3,"sources":["/home/codiis/credit-hive/src/components/CustomInput/SelectInput.js"],"names":["React","Select","Box","MenuItem","InputLabel","FormControl","Field","PropTypes","SelectInput","name","label","options","optionValue","optionText","disabled","handleChange","field","form","meta","value","e","setFieldValue","dirty","touched","backgroundColor","undefined","error","map","option","onChange","propTypes","string","labelWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Select, Box, MenuItem, InputLabel, FormControl} from '@material-ui/core';\nimport {Field} from 'formik';\nimport PropTypes from \"prop-types\";\n\nconst SelectInput = ({name, label, options, optionValue, optionText,disabled, handleChange}) => {\n    // const labelRef= useRef()\n    // const labelWidth = labelRef.current ? labelRef.current.clientWidth : 0\n    return (  \n  \n        <Box p={2}>\n          <Field name= {name} >     \n                    {({\n                          field, \n                          form,\n                          meta  \n                        }) => (\n                         <React.Fragment>\n                         <FormControl variant=\"outlined\" fullWidth size=\"small\"> \n                         <InputLabel shrink={field.value?true:false}>{label}</InputLabel>\n                         {handleChange ? (\n                            <Select \n                            key={label}     \n                            name= {field.name}     \n                            label={label}    \n                            disabled={disabled?disabled:false}\n                            value={field.value||''}   \n                            onChange={(e) => handleChange(e, form.setFieldValue)}  \n                            variant=\"outlined\"                            \n                            style={form.dirty && meta.touched?{backgroundColor:'#FDFBC5'}:undefined}\n                            type='text'  \n                            error={meta.error && meta.touched?true:false} \n                            >    \n                                <MenuItem value=\"\">None</MenuItem>                           \n                                {\n                                    options.map((option) =>(\n                                                        <MenuItem key={option[optionValue]} \n                                                                    value={option[optionValue]} >\n                                                                        {option[optionText]}\n                                                        </MenuItem>\n                                ))}\n                            </Select>):(\n                            <Select \n                            key={label}     \n                            name= {field.name}     \n                            label={label}    \n                            disabled={disabled?disabled:false}\n                            value={field.value||''} \n                            onChange={field.onChange}    \n                            variant=\"outlined\"  \n                            style={form.dirty && meta.touched?{backgroundColor:'#FDFBC5'}:undefined}\n                            type='text'  \n                            error={meta.error && meta.touched?true:false} \n                            >    \n                                <MenuItem value=\"\">None</MenuItem>                           \n                                {\n                                    options.map((option) =>(\n                                                        <MenuItem key={option[optionValue]} \n                                                                    value={option[optionValue]} >\n                                                                        {option[optionText]}\n                                                        </MenuItem>\n                                ))}\n                            </Select>\n                            )\n                        }\n                        </FormControl>\n                        </React.Fragment>\n                    )}\n            </Field>\n            </Box>\n    )\n}\n \nSelectInput.propTypes = {\n    name: PropTypes.string,\n    label:PropTypes.string,\n    options: PropTypes.string,\n    optionText:PropTypes.string,\n    value:PropTypes.string,\n    optionValue:PropTypes.string,\n    disabled:PropTypes.string,\n    handleChange:PropTypes.function,\n    labelWidth:PropTypes.string\n  };\n\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}